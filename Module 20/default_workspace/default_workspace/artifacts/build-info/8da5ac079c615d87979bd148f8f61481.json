{
	"id": "8da5ac079c615d87979bd148f8f61481",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"default_workspace/XP_TokenERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\";\n\ncontract XP_Token is ERC20, ERC20Detailed {\n    address payable owner;\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"You do not have permission to mint these tokens!\");\n        _;\n    }\n\n    constructor(uint initial_supply) ERC20Detailed(\"XP_Token\", \"XPT\", 18) public {\n        owner = msg.sender;\n        _mint(owner, initial_supply);\n    }\n\n    function mint(address recipient, uint amount) public onlyOwner {\n        _mint(recipient, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"default_workspace/XP_TokenERC20.sol": {
				"XP_Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initial_supply",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"default_workspace/XP_TokenERC20.sol\":268:739  contract XP_Token is ERC20, ERC20Detailed {... */\n  mstore(0x40, 0x80)\n    /* \"default_workspace/XP_TokenERC20.sol\":477:627  constructor(uint initial_supply) ERC20Detailed(\"XP_Token\", \"XPT\", 18) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"default_workspace/XP_TokenERC20.sol\":477:627  constructor(uint initial_supply) ERC20Detailed(\"XP_Token\", \"XPT\", 18) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"default_workspace/XP_TokenERC20.sol\":477:627  constructor(uint initial_supply) ERC20Detailed(\"XP_Token\", \"XPT\", 18) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":416:579  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x58505f546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5850540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"default_workspace/XP_TokenERC20.sol\":543:545  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":512:516  name */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":504:509  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":504:516  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":536:542  symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":526:533  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":526:542  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":564:572  decimals */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":552:561  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":552:572  _decimals = decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":416:579  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"default_workspace/XP_TokenERC20.sol\":572:582  msg.sender */\n  caller\n    /* \"default_workspace/XP_TokenERC20.sol\":564:569  owner */\n  0x05\n  0x01\n    /* \"default_workspace/XP_TokenERC20.sol\":564:582  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"default_workspace/XP_TokenERC20.sol\":592:620  _mint(owner, initial_supply) */\n  tag_12\n    /* \"default_workspace/XP_TokenERC20.sol\":598:603  owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"default_workspace/XP_TokenERC20.sol\":605:619  initial_supply */\n  dup3\n    /* \"default_workspace/XP_TokenERC20.sol\":592:597  _mint */\n  shl(0x20, tag_13)\n    /* \"default_workspace/XP_TokenERC20.sol\":592:620  _mint(owner, initial_supply) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"default_workspace/XP_TokenERC20.sol\":477:627  constructor(uint initial_supply) ERC20Detailed(\"XP_Token\", \"XPT\", 18) public {... */\n  pop\n    /* \"default_workspace/XP_TokenERC20.sol\":268:739  contract XP_Token is ERC20, ERC20Detailed {... */\n  jump(tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5962:6264  function _mint(address account, uint256 amount) internal {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6056:6057  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6058  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6044  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6058  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6029:6094  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6144  _totalSupply.add(amount) */\n  tag_17\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6137:6143  amount */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6132  _totalSupply */\n  sload(0x02)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6136  _totalSupply.add */\n  or(tag_0_80, shl(0x20, tag_18))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6144  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6105:6117  _totalSupply */\n  0x02\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6105:6144  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6205  _balances[account].add(amount) */\n  tag_19\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6198:6204  amount */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6184  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6193  _balances[account] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6185:6192  account */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6193  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6197  _balances[account].add */\n  or(tag_0_80, shl(0x20, tag_18))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6205  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6163  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6172  _balances[account] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6164:6171  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6172  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6205  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6241:6248  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6237:6238  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6250:6256  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5962:6264  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n  lt\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n  swap2\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"default_workspace/XP_TokenERC20.sol\":268:739  contract XP_Token is ERC20, ERC20Detailed {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_22)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_22\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\ntag_22:\n  pop\n  swap1\n  pop\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\n  tag_28\n  swap2\n  swap1\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\ntag_28:\n  swap1\n  jump\t// out\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"default_workspace/XP_TokenERC20.sol\":268:739  contract XP_Token is ERC20, ERC20Detailed {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"default_workspace/XP_TokenERC20.sol\":268:739  contract XP_Token is ERC20, ERC20Detailed {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_18:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_18)\n    tag_20:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_21:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1472:1553  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"default_workspace/XP_TokenERC20.sol\":633:737  function mint(address recipient, uint amount) public onlyOwner {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"default_workspace/XP_TokenERC20.sol\":633:737  function mint(address recipient, uint amount) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n    tag_11:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_45:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_46:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":681:694  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":713:718  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":706:718  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2566:2570  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2601  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2605:2612  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2614:2620  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2590  _approve */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2638:2642  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2631:2642  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1603:1610  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1629:1641  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1622:1641  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3196:3200  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3222:3228  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3230:3239  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3241:3247  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3221  _transfer */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3267:3273  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3285  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3327:3333  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3300  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3301:3307  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3319  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3326  _allowances[sender][_msgSender()].sub */\n      tag_73\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3266  _approve */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3396:3400  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3389:3400  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1472:1553  function decimals() public view returns (uint8) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1513:1518  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1537:1546  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1530:1546  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":1472:1553  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3882:3886  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3917  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3921:3928  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3969:3979  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3941  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3952  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3956:3963  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3968  _allowances[_msgSender()][spender].add */\n      tag_80\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3906  _approve */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3998:4002  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3991:4002  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"default_workspace/XP_TokenERC20.sol\":633:737  function mint(address recipient, uint amount) public onlyOwner {... */\n    tag_37:\n        /* \"default_workspace/XP_TokenERC20.sol\":395:400  owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"default_workspace/XP_TokenERC20.sol\":381:400  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"default_workspace/XP_TokenERC20.sol\":381:391  msg.sender */\n      caller\n        /* \"default_workspace/XP_TokenERC20.sol\":381:400  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"default_workspace/XP_TokenERC20.sol\":373:453  require(msg.sender == owner, \"You do not have permission to mint these tokens!\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_178de8740431ba43bce0d8ffae4df31ea8e7728033fe327bde1744d863b22cf5\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"default_workspace/XP_TokenERC20.sol\":706:730  _mint(recipient, amount) */\n      tag_84\n        /* \"default_workspace/XP_TokenERC20.sol\":712:721  recipient */\n      dup3\n        /* \"default_workspace/XP_TokenERC20.sol\":723:729  amount */\n      dup3\n        /* \"default_workspace/XP_TokenERC20.sol\":706:711  _mint */\n      tag_85\n        /* \"default_workspace/XP_TokenERC20.sol\":706:730  _mint(recipient, amount) */\n      jump\t// in\n    tag_84:\n        /* \"default_workspace/XP_TokenERC20.sol\":633:737  function mint(address recipient, uint amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1763:1770  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1798  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1799:1806  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1782:1807  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":877:890  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":909:916  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":902:916  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4581:4585  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      tag_93\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4616  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4620:4627  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4668:4683  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4640  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4651  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4655:4662  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4667  _allowances[_msgSender()][spender].sub */\n      tag_73\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4605  _approve */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4743:4747  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4736:4747  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2086:2090  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2122  _msgSender */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2126:2135  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2137:2143  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2111  _transfer */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2161:2165  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2154:2165  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2302:2309  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2339  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2340:2345  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2347:2354  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2321:2355  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7460:7461  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7448  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7435:7503  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7540:7541  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7528  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7513:7581  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7622:7628  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7603  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7604:7609  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7611:7618  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7628  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7659:7666  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7652:7657  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7668:7674  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5343:5344  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5331  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5317:5387  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5426:5427  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5414  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5397:5468  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5521:5527  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5508  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5509:5515  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5520  _balances[sender].sub */\n      tag_73\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5488  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5489:5495  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5570  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5628:5634  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5612  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5613:5622  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5627  _balances[recipient].add */\n      tag_80\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5589  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5590:5599  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5635  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5667:5676  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5659:5665  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5678:5684  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_111:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_111)\n    tag_113:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_114:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5962:6264  function _mint(address account, uint256 amount) internal {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6056:6057  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6058  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6044  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6037:6058  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6029:6094  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6144  _totalSupply.add(amount) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6137:6143  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6132  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6136  _totalSupply.add */\n      tag_80\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6120:6144  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6105:6117  _totalSupply */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6105:6144  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6205  _balances[account].add(amount) */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6198:6204  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6184  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6193  _balances[account] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6185:6192  account */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6193  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6197  _balances[account].add */\n      tag_80\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6175:6205  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6163  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6172  _balances[account] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6164:6171  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6172  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6154:6205  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6241:6248  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6237:6238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6250:6256  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":6220:6257  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5962:6264  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_178de8740431ba43bce0d8ffae4df31ea8e7728033fe327bde1744d863b22cf5 596f7520646f206e6f742068617665207065726d697373696f6e20746f206d696e7420746865736520746f6b656e7321\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa265627a7a723158207a71bfe7cdce71c64a776c6b25287dd5663a8420a8bc971e80bd012fbf943af764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200186c3803806200186c833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506040518060400160405280600881526020017f58505f546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f585054000000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000ce929190620003d5565b508160049080519060200190620000e7929190620003d5565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200017b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826200018260201b60201c565b5062000484565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000242816002546200034c60201b6200102f1790919060201c565b600281905550620002a0816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200034c60201b6200102f1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015620003cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041857805160ff191683800117855562000449565b8280016001018555821562000449579182015b82811115620004485782518255916020019190600101906200042b565b5b5090506200045891906200045c565b5090565b6200048191905b808211156200047d57600081600090555060010162000463565b5090565b90565b6113d880620004946000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146102d057806370a082311461031e57806395d89b4114610376578063a457c2d7146103f9578063a9059cbb1461045f578063dd62ed3e146104c5576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c161053d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105df565b604051808215151515815260200191505060405180910390f35b6101aa6105fd565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610607565b604051808215151515815260200191505060405180910390f35b61024e6106e0565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f7565b604051808215151515815260200191505060405180910390f35b61031c600480360360408110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107aa565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061085e565b6040518082815260200191505060405180910390f35b61037e6108a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103be5780820151818401526020810190506103a3565b50505050905090810190601f1680156103eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104456004803603604081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610948565b604051808215151515815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a33565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050505050905090565b60006105f36105ec610aba565b8484610ac2565b6001905092915050565b6000600254905090565b6000610614848484610cb9565b6106d584610620610aba565b6106d08560405180606001604052806028815260200161130e60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610686610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b610ac2565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107a0610704610aba565b8461079b8560016000610715610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b610ac2565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610850576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806112966030913960400191505060405180910390fd5b61085a82826110b7565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b5050505050905090565b6000610a0b610955610aba565b84610a068560405180606001604052806025815260200161137f602591396001600061097f610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b610ac2565b6001905092915050565b6000610a29610a22610aba565b8484610cb9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061135b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806112c66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806113366025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806112736023913960400191505060405180910390fd5b610e30816040518060600160405280602681526020016112e8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ec3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061101c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fe1578082015181840152602081019050610fc6565b50505050905090810190601f16801561100e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61116f8160025461102f90919063ffffffff16565b6002819055506111c6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373596f7520646f206e6f742068617665207065726d697373696f6e20746f206d696e7420746865736520746f6b656e732145524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158207a71bfe7cdce71c64a776c6b25287dd5663a8420a8bc971e80bd012fbf943af764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x186C CODESIZE SUB DUP1 PUSH3 0x186C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x58505F546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5850540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCE SWAP3 SWAP2 SWAP1 PUSH3 0x3D5 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE7 SWAP3 SWAP2 SWAP1 PUSH3 0x3D5 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP CALLER PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x17B PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH3 0x182 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x484 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x242 DUP2 PUSH1 0x2 SLOAD PUSH3 0x34C PUSH1 0x20 SHL PUSH3 0x102F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2A0 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x34C PUSH1 0x20 SHL PUSH3 0x102F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x418 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x449 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x449 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x448 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x42B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x458 SWAP2 SWAP1 PUSH3 0x45C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x481 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x463 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13D8 DUP1 PUSH3 0x494 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C5 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x101 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 PUSH2 0x5EC PUSH2 0xABA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x6D5 DUP5 PUSH2 0x620 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x6D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x686 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0x704 PUSH2 0xABA JUMP JUMPDEST DUP5 PUSH2 0x79B DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x715 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1296 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85A DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x93E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x913 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x921 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0B PUSH2 0x955 PUSH2 0xABA JUMP JUMPDEST DUP5 PUSH2 0xA06 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x97F PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 PUSH2 0xA22 PUSH2 0xABA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x135B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12C6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1336 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1273 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE30 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12E8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEC3 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFC6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x100E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116F DUP2 PUSH1 0x2 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x11C6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSIZE PUSH16 0x7520646F206E6F742068617665207065 PUSH19 0x6D697373696F6E20746F206D696E7420746865 PUSH20 0x6520746F6B656E732145524332303A2061707072 PUSH16 0x766520746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158207A71BFE7CDCE71C64A776C6B25287DD5663A8420A8BC97 0x1E DUP1 0xBD ADD 0x2F 0xBF SWAP5 GASPRICE 0xF7 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "268:471:0:-;;;477:150;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:150:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;477:150:0;;;;;;;;;;;;;;;;416:163:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:2:0;512:4:4;504:5;:12;;;;;;;;;;;;:::i;:::-;;536:6;526:7;:16;;;;;;;;;;;;:::i;:::-;;564:8;552:9;;:20;;;;;;;;;;;;;;;;;;416:163;;;572:10:0;564:5;;:18;;;;;;;;;;;;;;;;;;592:28;598:5;;;;;;;;;;;605:14;592:5;;;:28;;:::i;:::-;477:150;268:471;;5962:302:3;6056:1;6037:21;;:7;:21;;;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;;;;6175:30;6198:6;6175:9;:18;6185:7;6175:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;6154:9;:18;6164:7;6154:18;;;;;;;;;;;;;;;:51;;;;6241:7;6220:37;;6237:1;6220:37;;;6250:6;6220:37;;;;;;;;;;;;;;;;;;5962:302;;:::o;834:176:2:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;268:471:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146102d057806370a082311461031e57806395d89b4114610376578063a457c2d7146103f9578063a9059cbb1461045f578063dd62ed3e146104c5576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c161053d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105df565b604051808215151515815260200191505060405180910390f35b6101aa6105fd565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610607565b604051808215151515815260200191505060405180910390f35b61024e6106e0565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f7565b604051808215151515815260200191505060405180910390f35b61031c600480360360408110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107aa565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061085e565b6040518082815260200191505060405180910390f35b61037e6108a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103be5780820151818401526020810190506103a3565b50505050905090810190601f1680156103eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104456004803603604081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610948565b604051808215151515815260200191505060405180910390f35b6104ab6004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a33565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050505050905090565b60006105f36105ec610aba565b8484610ac2565b6001905092915050565b6000600254905090565b6000610614848484610cb9565b6106d584610620610aba565b6106d08560405180606001604052806028815260200161130e60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610686610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b610ac2565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107a0610704610aba565b8461079b8560016000610715610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b610ac2565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610850576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806112966030913960400191505060405180910390fd5b61085a82826110b7565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b5050505050905090565b6000610a0b610955610aba565b84610a068560405180606001604052806025815260200161137f602591396001600061097f610aba565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b610ac2565b6001905092915050565b6000610a29610a22610aba565b8484610cb9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061135b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806112c66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806113366025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806112736023913960400191505060405180910390fd5b610e30816040518060600160405280602681526020016112e8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ec3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061101c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fe1578082015181840152602081019050610fc6565b50505050905090810190601f16801561100e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61116f8160025461102f90919063ffffffff16565b6002819055506111c6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461102f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373596f7520646f206e6f742068617665207065726d697373696f6e20746f206d696e7420746865736520746f6b656e732145524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158207a71bfe7cdce71c64a776c6b25287dd5663a8420a8bc971e80bd012fbf943af764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C5 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x101 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 PUSH2 0x5EC PUSH2 0xABA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x6D5 DUP5 PUSH2 0x620 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x6D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x686 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0 PUSH2 0x704 PUSH2 0xABA JUMP JUMPDEST DUP5 PUSH2 0x79B DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x715 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1296 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85A DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x93E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x913 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x921 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0B PUSH2 0x955 PUSH2 0xABA JUMP JUMPDEST DUP5 PUSH2 0xA06 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x97F PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 PUSH2 0xA22 PUSH2 0xABA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x135B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12C6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1336 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1273 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE30 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12E8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEC3 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFC6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x100E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116F DUP2 PUSH1 0x2 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x11C6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x102F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSIZE PUSH16 0x7520646F206E6F742068617665207065 PUSH19 0x6D697373696F6E20746F206D696E7420746865 PUSH20 0x6520746F6B656E732145524332303A2061707072 PUSH16 0x766520746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158207A71BFE7CDCE71C64A776C6B25287DD5663A8420A8BC97 0x1E DUP1 0xBD ADD 0x2F 0xBF SWAP5 GASPRICE 0xF7 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "268:471:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2500:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:300:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1472:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3802:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3802:207:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;633:104:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;633:104:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1706:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;838:85:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;838:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:258:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4496:258:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2017:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2017:155:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2230:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:81:4;681:13;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2500:149:3:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;1559:89::-;1603:7;1629:12;;1622:19;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;1472:81:4:-;1513:5;1537:9;;;;;;;;;;;1530:16;;1472:81;:::o;3802:207:3:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;:34;3956:7;3930:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3898:8;:83::i;:::-;3998:4;3991:11;;3802:207;;;;:::o;633:104:0:-;395:5;;;;;;;;;;;381:19;;:10;:19;;;373:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:24;712:9;723:6;706:5;:24::i;:::-;633:104;;:::o;1706:108:3:-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;838:85:4:-;877:13;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:85;:::o;4496:258:3:-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;:34;4655:7;4629:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4597:8;:129::i;:::-;4743:4;4736:11;;4496:258;;;;:::o;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;2230:132::-;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;788:96:1:-;833:15;867:10;860:17;;788:96;:::o;7350:332:3:-;7460:1;7443:19;;:5;:19;;;;7435:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:1;7521:21;;:7;:21;;;;7513:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:6;7592:11;:18;7604:5;7592:18;;;;;;;;;;;;;;;:27;7611:7;7592:27;;;;;;;;;;;;;;;:36;;;;7659:7;7643:32;;7652:5;7643:32;;;7668:6;7643:32;;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;1732:187:2:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;5962:302:3:-;6056:1;6037:21;;:7;:21;;;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;:24;;;;:::i;:::-;6105:12;:39;;;;6175:30;6198:6;6175:9;:18;6185:7;6175:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6154:9;:18;6164:7;6154:18;;;;;;;;;;;;;;;:51;;;;6241:7;6220:37;;6237:1;6220:37;;;6250:6;6220:37;;;;;;;;;;;;;;;;;;5962:302;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1016000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "MSTORE"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "POP"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "MLOAD"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "PUSHSIZE"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "CODESIZE"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SUB"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "PUSHSIZE"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP4"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "CODECOPY"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP2"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP2"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "ADD"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP2"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "ADD"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "DUP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "MLOAD"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "ADD"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP3"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP2"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "SWAP1"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "POP"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "POP"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "58505F546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "5850540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 543,
									"end": 545,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 512,
									"end": 516,
									"name": "DUP3"
								},
								{
									"begin": 504,
									"end": 509,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "DUP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "MLOAD"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "ADD"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP3"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP2"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "JUMPDEST"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "POP"
								},
								{
									"begin": 536,
									"end": 542,
									"name": "DUP2"
								},
								{
									"begin": 526,
									"end": 533,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "DUP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "MLOAD"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "ADD"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP3"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP2"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "JUMPDEST"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 572,
									"name": "DUP1"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "EXP"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP2"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SLOAD"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP2"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "MUL"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "NOT"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "AND"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SWAP1"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP4"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "AND"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "MUL"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "OR"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SWAP1"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SSTORE"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 572,
									"end": 582,
									"name": "CALLER"
								},
								{
									"begin": 564,
									"end": 569,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 564,
									"end": 569,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "EXP"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "SLOAD"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "MUL"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "NOT"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "DUP4"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "MUL"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "OR"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "SSTORE"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "POP"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "SWAP1"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "SLOAD"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "SWAP1"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "EXP"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "SWAP1"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "DIV"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 598,
									"end": 603,
									"name": "AND"
								},
								{
									"begin": 605,
									"end": 619,
									"name": "DUP3"
								},
								{
									"begin": 592,
									"end": 597,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 592,
									"end": 597,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 592,
									"end": 597,
									"name": "SHL"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "SHR"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "JUMPDEST"
								},
								{
									"begin": 477,
									"end": 627,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 5962,
									"end": 6264,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 5962,
									"end": 6264,
									"name": "JUMPDEST"
								},
								{
									"begin": 6056,
									"end": 6057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "AND"
								},
								{
									"begin": 6037,
									"end": 6044,
									"name": "DUP3"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "AND"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "EQ"
								},
								{
									"begin": 6037,
									"end": 6058,
									"name": "ISZERO"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "JUMPI"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MLOAD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MSTORE"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "ADD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "ADD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP3"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "SUB"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP3"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MSTORE"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MSTORE"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "ADD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MSTORE"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "POP"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "ADD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "SWAP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "POP"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "POP"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "MLOAD"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "SWAP2"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "SUB"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "SWAP1"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "REVERT"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 6029,
									"end": 6094,
									"name": "JUMPDEST"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 6137,
									"end": 6143,
									"name": "DUP2"
								},
								{
									"begin": 6120,
									"end": 6132,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 6120,
									"end": 6132,
									"name": "SLOAD"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "SHL"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "PUSH [tag]",
									"value": "18446744073709551696"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "OR"
								},
								{
									"begin": 6120,
									"end": 6136,
									"name": "SWAP1"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "SWAP2"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "SWAP1"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "SHR"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 6120,
									"end": 6144,
									"name": "JUMPDEST"
								},
								{
									"begin": 6105,
									"end": 6117,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 6105,
									"end": 6144,
									"name": "DUP2"
								},
								{
									"begin": 6105,
									"end": 6144,
									"name": "SWAP1"
								},
								{
									"begin": 6105,
									"end": 6144,
									"name": "SSTORE"
								},
								{
									"begin": 6105,
									"end": 6144,
									"name": "POP"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 6198,
									"end": 6204,
									"name": "DUP2"
								},
								{
									"begin": 6175,
									"end": 6184,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "DUP1"
								},
								{
									"begin": 6185,
									"end": 6192,
									"name": "DUP6"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "AND"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "AND"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "DUP2"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "MSTORE"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "ADD"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "SWAP1"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "DUP2"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "MSTORE"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "ADD"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "KECCAK256"
								},
								{
									"begin": 6175,
									"end": 6193,
									"name": "SLOAD"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "SHL"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "PUSH [tag]",
									"value": "18446744073709551696"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "OR"
								},
								{
									"begin": 6175,
									"end": 6197,
									"name": "SWAP1"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "SWAP2"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "SWAP1"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "SHR"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 6175,
									"end": 6205,
									"name": "JUMPDEST"
								},
								{
									"begin": 6154,
									"end": 6163,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "DUP1"
								},
								{
									"begin": 6164,
									"end": 6171,
									"name": "DUP5"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "AND"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "AND"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "DUP2"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "MSTORE"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "ADD"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "SWAP1"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "DUP2"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "MSTORE"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "ADD"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6154,
									"end": 6172,
									"name": "KECCAK256"
								},
								{
									"begin": 6154,
									"end": 6205,
									"name": "DUP2"
								},
								{
									"begin": 6154,
									"end": 6205,
									"name": "SWAP1"
								},
								{
									"begin": 6154,
									"end": 6205,
									"name": "SSTORE"
								},
								{
									"begin": 6154,
									"end": 6205,
									"name": "POP"
								},
								{
									"begin": 6241,
									"end": 6248,
									"name": "DUP2"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "AND"
								},
								{
									"begin": 6237,
									"end": 6238,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "AND"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 6250,
									"end": 6256,
									"name": "DUP4"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "MLOAD"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "DUP1"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "DUP3"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "DUP2"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "MSTORE"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "ADD"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "SWAP2"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "POP"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "POP"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "MLOAD"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "DUP1"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "SWAP2"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "SUB"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "SWAP1"
								},
								{
									"begin": 6220,
									"end": 6257,
									"name": "LOG3"
								},
								{
									"begin": 5962,
									"end": 6264,
									"name": "POP"
								},
								{
									"begin": 5962,
									"end": 6264,
									"name": "POP"
								},
								{
									"begin": 5962,
									"end": 6264,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMPDEST"
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP1"
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 924,
									"name": "DUP5"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "POP"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP4"
								},
								{
									"begin": 946,
									"end": 947,
									"name": "DUP2"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "LT"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "ISZERO"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPI"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "REVERT"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1003,
									"name": "DUP1"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "SWAP2"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP3"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP2"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SLOAD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "AND"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ISZERO"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "MUL"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SUB"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "AND"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DIV"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "MSTORE"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "KECCAK256"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DIV"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "LT"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPI"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "MLOAD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "NOT"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "AND"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP4"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "OR"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP6"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SSTORE"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP6"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SSTORE"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ISZERO"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPI"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "GT"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ISZERO"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPI"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "MLOAD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SSTORE"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP3"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "GT"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ISZERO"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPI"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP2"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SSTORE"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "ADD"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "CODECOPY"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 739,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207a71bfe7cdce71c64a776c6b25287dd5663a8420a8bc971e80bd012fbf943af764736f6c63430005110032",
									".code": [
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "LT"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "SHR"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "GT"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMP"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 739,
											"name": "REVERT"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ISZERO"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "EXP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "NOT"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "RETURN"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MSTORE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "RETURN"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "RETURN"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "RETURN"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "MLOAD"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "DUP1"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "DUP3"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "MSTORE"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "SWAP2"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "MLOAD"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "DUP1"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "SWAP2"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "SUB"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "RETURN"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "RETURN"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "DUP2"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "ADD"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "AND"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "ADD"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP3"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP2"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "ADD"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP3"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP2"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "STOP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MSTORE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "RETURN"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ISZERO"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPI"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "EXP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "NOT"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "RETURN"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "RETURN"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "RETURN"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 681,
											"end": 694,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "LT"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "KECCAK256"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "GT"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2591,
											"end": 2601,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2612,
											"name": "DUP5"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP5"
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP5"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP5"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP5"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "DUP5"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "DUP6"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MLOAD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "CODECOPY"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP12"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SLOAD"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP3"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMPDEST"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "SLOAD"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "EXP"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DIV"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "AND"
										},
										{
											"begin": 1530,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1530,
											"end": 1546,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3907,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMPDEST"
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP5"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP6"
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3942,
											"end": 3952,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMPDEST"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "DUP10"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SLOAD"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPDEST"
										},
										{
											"begin": 3898,
											"end": 3906,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMPDEST"
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SLOAD"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "EXP"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DIV"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 381,
											"end": 391,
											"name": "CALLER"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "EQ"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH data",
											"value": "178DE8740431BA43BCE0D8FFAE4DF31EA8E7728033FE327BDE1744D863B22CF5"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "CODECOPY"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "REVERT"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 373,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 730,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 712,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 706,
											"end": 730,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 706,
											"end": 730,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 706,
											"end": 730,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 633,
											"end": 737,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP4"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "KECCAK256"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SLOAD"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 877,
											"end": 890,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 909,
											"end": 916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "KECCAK256"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "GT"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 4606,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 4668,
											"end": 4683,
											"name": "DUP6"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MLOAD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "CODECOPY"
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMPDEST"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "DUP11"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SLOAD"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP3"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4597,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMPDEST"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2112,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMPDEST"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP5"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP5"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2339,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP5"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP4"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SLOAD"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMPDEST"
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7448,
											"name": "DUP4"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "EQ"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "ISZERO"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPI"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "CODECOPY"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "REVERT"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPDEST"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7528,
											"name": "DUP3"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "EQ"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "ISZERO"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPI"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "CODECOPY"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "REVERT"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPDEST"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP1"
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP6"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7618,
											"name": "DUP5"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SSTORE"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "POP"
										},
										{
											"begin": 7659,
											"end": 7666,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7652,
											"end": 7657,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP3"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MSTORE"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "ADD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SUB"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "LOG3"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMPDEST"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP4"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "EQ"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPI"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "CODECOPY"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "REVERT"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPDEST"
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5414,
											"name": "DUP3"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "EQ"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPI"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "CODECOPY"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "REVERT"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPDEST"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MLOAD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "CODECOPY"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP1"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP8"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "KECCAK256"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SLOAD"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP1"
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP6"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "KECCAK256"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SSTORE"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP1"
										},
										{
											"begin": 5613,
											"end": 5622,
											"name": "DUP6"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "KECCAK256"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SLOAD"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP2"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMPDEST"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP1"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP5"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "KECCAK256"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SSTORE"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "POP"
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP3"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MSTORE"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "ADD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SUB"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "LOG3"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5962,
											"end": 6264,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5962,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 6056,
											"end": 6057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "AND"
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "DUP3"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "AND"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "EQ"
										},
										{
											"begin": 6037,
											"end": 6058,
											"name": "ISZERO"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "JUMPI"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP3"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "SUB"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP3"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "SUB"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "SWAP1"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "REVERT"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6029,
											"end": 6094,
											"name": "JUMPDEST"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "DUP2"
										},
										{
											"begin": 6120,
											"end": 6132,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6120,
											"end": 6132,
											"name": "SLOAD"
										},
										{
											"begin": 6120,
											"end": 6136,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 6120,
											"end": 6136,
											"name": "SWAP1"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "SWAP2"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "SWAP1"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "AND"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "JUMPDEST"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "DUP2"
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "SWAP1"
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "SSTORE"
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "POP"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6198,
											"end": 6204,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "DUP1"
										},
										{
											"begin": 6185,
											"end": 6192,
											"name": "DUP6"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "MSTORE"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "ADD"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "SWAP1"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "MSTORE"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "ADD"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "KECCAK256"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "SLOAD"
										},
										{
											"begin": 6175,
											"end": 6197,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 6175,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "SWAP2"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "SWAP1"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "JUMPDEST"
										},
										{
											"begin": 6154,
											"end": 6163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "DUP1"
										},
										{
											"begin": 6164,
											"end": 6171,
											"name": "DUP5"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "AND"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "AND"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "DUP2"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "MSTORE"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "ADD"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "SWAP1"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "DUP2"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "MSTORE"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "ADD"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "KECCAK256"
										},
										{
											"begin": 6154,
											"end": 6205,
											"name": "DUP2"
										},
										{
											"begin": 6154,
											"end": 6205,
											"name": "SWAP1"
										},
										{
											"begin": 6154,
											"end": 6205,
											"name": "SSTORE"
										},
										{
											"begin": 6154,
											"end": 6205,
											"name": "POP"
										},
										{
											"begin": 6241,
											"end": 6248,
											"name": "DUP2"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "AND"
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "AND"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP4"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "MLOAD"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "DUP3"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "SWAP2"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "POP"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "POP"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "MLOAD"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "SWAP2"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "SUB"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "SWAP1"
										},
										{
											"begin": 6220,
											"end": 6257,
											"name": "LOG3"
										},
										{
											"begin": 5962,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5962,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5962,
											"end": 6264,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"178DE8740431BA43BCE0D8FFAE4DF31EA8E7728033FE327BDE1744D863B22CF5": "596f7520646f206e6f742068617665207065726d697373696f6e20746f206d696e7420746865736520746f6b656e7321",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initial_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"default_workspace/XP_TokenERC20.sol\":\"XP_Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"default_workspace/XP_TokenERC20.sol\":{\"keccak256\":\"0x0b5148e07b82101fa04d3537f32fa8fcaeca2a7756ebf1e4a00c4df1648c680a\",\"urls\":[\"bzz-raw://ba606dce4d86b651243503154a87d6c804c7f0e3adb1c70e23d030177f73e2b7\",\"dweb:/ipfs/QmTVow8TotgCCP3NxCnWcMfhNN5ybvoaVZJD3tbsAcHuUR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 288,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 294,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 296,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 684,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 686,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 688,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "default_workspace/XP_TokenERC20.sol:XP_Token",
								"label": "owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2566:2570  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      tag_37\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2601  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2605:2612  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2614:2620  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2590  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2638:2642  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2631:2642  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1603:1610  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1629:1641  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1622:1641  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3196:3200  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3222:3228  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3230:3239  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3241:3247  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3221  _transfer */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3267:3273  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3285  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3327:3333  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3300  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3301:3307  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3319  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3326  _allowances[sender][_msgSender()].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3266  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3396:3400  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3389:3400  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3882:3886  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3917  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3921:3928  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3969:3979  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3941  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3952  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3956:3963  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3968  _allowances[_msgSender()][spender].add */\n      tag_54\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3906  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3998:4002  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3991:4002  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1763:1770  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1798  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1799:1806  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1782:1807  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4581:4585  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4616  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4620:4627  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4668:4683  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4640  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4651  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4655:4662  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4667  _allowances[_msgSender()][spender].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4605  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4743:4747  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4736:4747  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2086:2090  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2122  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2126:2135  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2137:2143  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2111  _transfer */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2161:2165  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2154:2165  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2302:2309  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2339  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2340:2345  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2347:2354  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2321:2355  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7460:7461  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7448  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7435:7503  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7540:7541  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7528  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7513:7581  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7622:7628  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7603  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7604:7609  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7611:7618  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7628  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7659:7666  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7652:7657  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7668:7674  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5343:5344  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5331  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5317:5387  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5426:5427  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5414  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5397:5468  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5521:5527  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5508  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5509:5515  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5520  _balances[sender].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5488  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5489:5495  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5570  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5628:5634  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5612  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5613:5622  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5627  _balances[recipient].add */\n      tag_54\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5589  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5590:5599  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5635  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5667:5676  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5659:5665  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5678:5684  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa265627a7a72315820e18bbf93b6f1eff8598c519281566629dd08f5b89cb027ada69a159223afae7e64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610e3a806100136000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce848484610906565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610de160259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b8484610906565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610795576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dbd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d286022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610d986025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d056023913960400191505060405180910390fd5b610a7d81604051806060016040528060268152602001610d4a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b10816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610c69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2e578082015181840152602081019050610c13565b50505050905090810190601f168015610c5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610cfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820e18bbf93b6f1eff8598c519281566629dd08f5b89cb027ada69a159223afae7e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xE3A DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD70 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDBD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD28 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD05 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB10 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC5B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x72315820E18BBF93B6F1EFF8598C519281566629DD08F5B89CB027 0xAD 0xA6 SWAP11 ISZERO SWAP3 0x23 0xAF 0xAE PUSH31 0x64736F6C634300051100320000000000000000000000000000000000000000 ",
							"sourceMap": "1268:6823:3:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce848484610906565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610de160259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b8484610906565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610795576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dbd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d286022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610d986025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d056023913960400191505060405180910390fd5b610a7d81604051806060016040528060268152602001610d4a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b10816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610c69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2e578082015181840152602081019050610c13565b50505050905090810190601f168015610c5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610cfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820e18bbf93b6f1eff8598c519281566629dd08f5b89cb027ada69a159223afae7e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD70 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDBD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD28 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD05 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB10 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC5B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x72315820E18BBF93B6F1EFF8598C519281566629DD08F5B89CB027 0xAD 0xA6 SWAP11 ISZERO SWAP3 0x23 0xAF 0xAE PUSH31 0x64736F6C634300051100320000000000000000000000000000000000000000 ",
							"sourceMap": "1268:6823:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1268:6823:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2500:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:300:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3802:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3802:207:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1706:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4496:258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4496:258:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2017:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2017:155:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2230:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2500:149;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;1559:89::-;1603:7;1629:12;;1622:19;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;:34;3956:7;3930:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3898:8;:83::i;:::-;3998:4;3991:11;;3802:207;;;;:::o;1706:108::-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;4496:258::-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;:34;4655:7;4629:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4597:8;:129::i;:::-;4743:4;4736:11;;4496:258;;;;:::o;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;2230:132::-;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;788:96:1:-;833:15;867:10;860:17;;788:96;:::o;7350:332:3:-;7460:1;7443:19;;:5;:19;;;;7435:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:1;7521:21;;:7;:21;;;;7513:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:6;7592:11;:18;7604:5;7592:18;;;;;;;;;;;;;;;:27;7611:7;7592:27;;;;;;;;;;;;;;;:36;;;;7659:7;7643:32;;7652:5;7643:32;;;7668:6;7643:32;;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;1732:187:2:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "728400",
								"executionCost": "736",
								"totalCost": "729136"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1196",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "MSTORE"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "DUP1"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "CODECOPY"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e18bbf93b6f1eff8598c519281566629dd08f5b89cb027ada69a159223afae7e64736f6c63430005110032",
									".code": [
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "MSTORE"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "LT"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "SHR"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "GT"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMP"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "REVERT"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MSTORE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "RETURN"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "RETURN"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "RETURN"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "RETURN"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MSTORE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "RETURN"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "RETURN"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "RETURN"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "RETURN"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2591,
											"end": 2601,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2612,
											"name": "DUP5"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP5"
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP5"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP5"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP5"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "DUP5"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "DUP6"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MLOAD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "CODECOPY"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP12"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SLOAD"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP3"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMPDEST"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3907,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMPDEST"
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP5"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP6"
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3942,
											"end": 3952,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMPDEST"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "DUP10"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SLOAD"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPDEST"
										},
										{
											"begin": 3898,
											"end": 3906,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMPDEST"
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP4"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "KECCAK256"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SLOAD"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4606,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4668,
											"end": 4683,
											"name": "DUP6"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MLOAD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "CODECOPY"
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMPDEST"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "DUP11"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SLOAD"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP3"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4597,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMPDEST"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMPDEST"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP5"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP5"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2339,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP5"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP4"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SLOAD"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMPDEST"
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7448,
											"name": "DUP4"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "EQ"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "ISZERO"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPI"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "CODECOPY"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "REVERT"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPDEST"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7528,
											"name": "DUP3"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "EQ"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "ISZERO"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPI"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "CODECOPY"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "REVERT"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPDEST"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP1"
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP6"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7618,
											"name": "DUP5"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SSTORE"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "POP"
										},
										{
											"begin": 7659,
											"end": 7666,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7652,
											"end": 7657,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP3"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MSTORE"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "ADD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SUB"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "LOG3"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMPDEST"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP4"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "EQ"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPI"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "CODECOPY"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "REVERT"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPDEST"
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5414,
											"name": "DUP3"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "EQ"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPI"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "CODECOPY"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "REVERT"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPDEST"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MLOAD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "CODECOPY"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP1"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP8"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "KECCAK256"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SLOAD"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP1"
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP6"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "KECCAK256"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SSTORE"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP1"
										},
										{
											"begin": 5613,
											"end": 5622,
											"name": "DUP6"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "KECCAK256"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SLOAD"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP2"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMPDEST"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP1"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP5"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "KECCAK256"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SSTORE"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "POP"
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP3"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MSTORE"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "ADD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SUB"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "LOG3"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 288,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 294,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 296,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 684,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 686,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 688,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"default_workspace/XP_TokenERC20.sol": {
				"ast": {
					"absolutePath": "default_workspace/XP_TokenERC20.sol",
					"exportedSymbols": {
						"XP_Token": [
							58
						]
					},
					"id": 59,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 678,
							"src": "25:116:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 736,
							"src": "142:124:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 677,
										"src": "289:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$677",
											"typeString": "contract ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "289:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "ERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 735,
										"src": "296:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Detailed_$735",
											"typeString": "contract ERC20Detailed"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "296:13:0"
								}
							],
							"contractDependencies": [
								85,
								677,
								735,
								804
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58,
								735,
								677,
								804,
								85
							],
							"name": "XP_Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 9,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "316:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "316:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "363:108:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 12,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "381:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 14,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "395:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "381:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520646f206e6f742068617665207065726d697373696f6e20746f206d696e7420746865736520746f6b656e7321",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "402:50:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_178de8740431ba43bce0d8ffae4df31ea8e7728033fe327bde1744d863b22cf5",
																"typeString": "literal_string \"You do not have permission to mint these tokens!\""
															},
															"value": "You do not have permission to mint these tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_178de8740431ba43bce0d8ffae4df31ea8e7728033fe327bde1744d863b22cf5",
																"typeString": "literal_string \"You do not have permission to mint these tokens!\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "373:80:0"
											},
											{
												"id": 19,
												"nodeType": "PlaceholderStatement",
												"src": "463:1:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:0"
									},
									"src": "344:127:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "554:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "564:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "572:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "564:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "564:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "598:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "initial_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "605:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 36,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "592:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "592:28:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "58505f546f6b656e",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "524:10:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_529986b8c21d0296993c1908687ce872e8bc9b93a0ddb66f18986af3f647ae00",
														"typeString": "literal_string \"XP_Token\""
													},
													"value": "XP_Token"
												},
												{
													"argumentTypes": null,
													"hexValue": "585054",
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "536:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3fd5c7ceb9eb265f50afdebfde1e7a46955f68e064fa51febb0dde4f4cadcdaa",
														"typeString": "literal_string \"XPT\""
													},
													"value": "XPT"
												},
												{
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "543:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												}
											],
											"id": 29,
											"modifierName": {
												"argumentTypes": null,
												"id": 25,
												"name": "ERC20Detailed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 735,
												"src": "510:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$735_$",
													"typeString": "type(contract ERC20Detailed)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "510:36:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "initial_supply",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "489:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "488:21:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:0"
									},
									"scope": 58,
									"src": "477:150:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "696:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 52,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "712:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 53,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "723:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 51,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "706:24:0"
											}
										]
									},
									"documentation": null,
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 49,
											"modifierName": {
												"argumentTypes": null,
												"id": 48,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 21,
												"src": "686:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "686:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "666:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "646:32:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:0:0"
									},
									"scope": 58,
									"src": "633:104:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 59,
							"src": "268:471:0"
						}
					],
					"src": "0:740:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							85
						]
					},
					"id": 86,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 85,
							"linearizedBaseContracts": [
								85
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "726:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:1"
									},
									"scope": 85,
									"src": "702:27:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "850:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 69,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "867:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "867:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 68,
												"id": 71,
												"nodeType": "Return",
												"src": "860:17:1"
											}
										]
									},
									"documentation": null,
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "833:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:17:1"
									},
									"scope": 85,
									"src": "788:96:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "947:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$85",
														"typeString": "contract Context"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "957:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 80,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1097:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1097:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 77,
												"id": 82,
												"nodeType": "Return",
												"src": "1090:15:1"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "933:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 75,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:14:1"
									},
									"scope": 85,
									"src": "890:222:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 86,
							"src": "525:589:1"
						}
					],
					"src": "0:1115:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							272
						]
					},
					"id": 273,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "901:109:2",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "911:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 96,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 99,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "951:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "938:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "1002:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 110,
												"nodeType": "Return",
												"src": "995:8:2"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "847:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "858:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:2"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 272,
									"src": "834:176:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1341:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 122,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1362:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 123,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1365:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 121,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															128,
															155
														],
														"referencedDeclaration": 155,
														"src": "1358:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 126,
												"nodeType": "Return",
												"src": "1351:50:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1287:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1298:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1332:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:2"
									},
									"scope": 272,
									"src": "1274:134:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1827:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1845:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1850:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 143,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1853:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "1837:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:2"
											},
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 154,
														"src": "1876:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 148,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1888:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 149,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1892:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "1911:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 153,
												"nodeType": "Return",
												"src": "1904:8:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1745:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1756:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1767:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1818:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:2"
									},
									"scope": 272,
									"src": "1732:187:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2226:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2458:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 170,
												"nodeType": "IfStatement",
												"src": "2454:45:2",
												"trueBody": {
													"id": 169,
													"nodeType": "Block",
													"src": "2466:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 163,
															"id": 168,
															"nodeType": "Return",
															"src": "2480:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "2509:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2521:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2525:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 178,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 179,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "2548:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2553:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "2536:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 186,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "2610:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 187,
												"nodeType": "Return",
												"src": "2603:8:2"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2172:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2183:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2217:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:2"
									},
									"scope": 272,
									"src": "2159:459:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3140:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3161:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "3164:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 198,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															205,
															232
														],
														"referencedDeclaration": 232,
														"src": "3157:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 203,
												"nodeType": "Return",
												"src": "3150:46:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3086:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3097:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3131:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:2"
									},
									"scope": 272,
									"src": "3073:130:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3813:243:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3897:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 220,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3904:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "3889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:2"
											},
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "3927:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3939:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 226,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3943:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 229,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 224,
													"src": "4048:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 215,
												"id": 230,
												"nodeType": "Return",
												"src": "4041:8:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3731:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3742:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3753:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3804:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:2"
									},
									"scope": 272,
									"src": "3718:338:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "4567:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 242,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4588:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 243,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4591:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 241,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															248,
															271
														],
														"referencedDeclaration": 271,
														"src": "4584:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 246,
												"nodeType": "Return",
												"src": "4577:44:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4513:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4524:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4558:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:2"
									},
									"scope": 272,
									"src": "4500:128:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "5227:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "5245:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "5253:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "5237:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "5283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "5287:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 269,
												"nodeType": "Return",
												"src": "5276:12:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5145:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5156:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5167:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5218:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:2"
									},
									"scope": 272,
									"src": "5132:163:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 273,
							"src": "589:4708:2"
						}
					],
					"src": "0:5298:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							677
						]
					},
					"id": 678,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 274,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 275,
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 86,
							"src": "25:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 276,
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 805,
							"src": "57:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 277,
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 273,
							"src": "80:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 278,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 85,
										"src": "1286:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$85",
											"typeString": "contract Context"
										}
									},
									"id": 279,
									"nodeType": "InheritanceSpecifier",
									"src": "1286:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 280,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 804,
										"src": "1295:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$804",
											"typeString": "contract IERC20"
										}
									},
									"id": 281,
									"nodeType": "InheritanceSpecifier",
									"src": "1295:6:3"
								}
							],
							"contractDependencies": [
								85,
								804
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20Mintable}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677,
								804,
								85
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 284,
									"libraryName": {
										"contractScope": null,
										"id": 282,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 272,
										"src": "1314:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$272",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1308:27:3",
									"typeName": {
										"id": 283,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1327:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 288,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1341:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 287,
										"keyType": {
											"id": 285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1350:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1341:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 286,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1394:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 293,
										"keyType": {
											"id": 289,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 292,
											"keyType": {
												"id": 290,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1423:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1414:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1434:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 296,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1470:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 295,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1470:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1612:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 296,
													"src": "1629:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 302,
												"nodeType": "Return",
												"src": "1622:19:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:2:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1603:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1602:9:3"
									},
									"scope": 677,
									"src": "1559:89:3",
									"stateMutability": "view",
									"superFunction": 742,
									"visibility": "public"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "1772:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "1789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 313,
													"indexExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "1799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1789:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 314,
												"nodeType": "Return",
												"src": "1782:25:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1724:17:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1763:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:9:3"
									},
									"scope": 677,
									"src": "1706:108:3",
									"stateMutability": "view",
									"superFunction": 749,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2092:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2112:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2112:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 328,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "2126:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "2137:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2102:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "2102:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2161:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 324,
												"id": 333,
												"nodeType": "Return",
												"src": "2154:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2035:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2054:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:35:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2086:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2086:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2085:6:3"
									},
									"scope": 677,
									"src": "2017:155:3",
									"stateMutability": "nonpayable",
									"superFunction": 758,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2311:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 344,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "2328:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"argumentTypes": null,
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "2340:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2328:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2347:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2328:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "2321:34:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2249:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2264:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2248:32:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2302:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2301:9:3"
									},
									"scope": 677,
									"src": "2230:132:3",
									"stateMutability": "view",
									"superFunction": 767,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2572:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2591:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2591:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2605:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2614:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "2582:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "2582:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2638:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 368,
												"nodeType": "Return",
												"src": "2631:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2517:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2534:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2516:33:3"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2566:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2566:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2565:6:3"
									},
									"scope": 677,
									"src": "2500:149:3",
									"stateMutability": "nonpayable",
									"superFunction": 776,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3202:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 382,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3222:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3230:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 384,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "3212:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3212:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 388,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3267:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 389,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "3275:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3275:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 398,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "3327:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3335:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 391,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "3289:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 393,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 392,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "3301:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3289:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 396,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 394,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 73,
																			"src": "3309:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3309:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3289:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 155,
																"src": "3289:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3289:89:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 387,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3258:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3258:121:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3258:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3396:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 380,
												"id": 404,
												"nodeType": "Return",
												"src": "3389:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3129:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3145:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3164:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3128:51:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3196:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3196:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3195:6:3"
									},
									"scope": 677,
									"src": "3107:300:3",
									"stateMutability": "nonpayable",
									"superFunction": 787,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "3888:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 416,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "3907:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3907:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 418,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "3921:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 426,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "3969:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 419,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "3930:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 422,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 420,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "3942:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3942:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3930:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 424,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 423,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "3956:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3930:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 112,
																"src": "3930:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3930:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 415,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3898:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3898:83:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "3898:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3998:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 414,
												"id": 431,
												"nodeType": "Return",
												"src": "3991:11:3"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3829:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3846:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:37:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3882:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3882:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3881:6:3"
									},
									"scope": 677,
									"src": "3802:207:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "4587:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 443,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "4606:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4606:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 445,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4620:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 453,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "4668:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4685:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 446,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "4629:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 449,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 447,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "4641:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4641:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4629:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 450,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "4655:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4629:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 155,
																"src": "4629:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4629:96:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4597:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4597:129:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "4597:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4743:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 441,
												"id": 459,
												"nodeType": "Return",
												"src": "4736:11:3"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "4523:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "4540:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4540:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4522:42:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "4581:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4581:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4580:6:3"
									},
									"scope": 677,
									"src": "4496:258:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "5307:385:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 471,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "5325:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5343:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5335:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5335:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5325:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5347:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "5317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5317:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 480,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "5405:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5426:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5418:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5418:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5405:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5430:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "5397:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5397:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 488,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5479:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 490,
														"indexExpression": {
															"argumentTypes": null,
															"id": 489,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5489:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5479:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 495,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5521:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5529:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 491,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "5499:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 493,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 492,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "5509:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5499:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "5499:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5499:71:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5479:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "5479:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 500,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5580:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 502,
														"indexExpression": {
															"argumentTypes": null,
															"id": 501,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5590:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5580:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5628:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 503,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "5603:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 504,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "5613:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5603:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 112,
															"src": "5603:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5603:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5580:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "5580:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 512,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5659:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 513,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5667:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5678:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "5650:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "EmitStatement",
												"src": "5645:40:3"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "5247:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "5263:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "5282:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5246:51:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5307:0:3"
									},
									"scope": 677,
									"src": "5228:464:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "6019:245:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 526,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6037:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6056:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6048:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6048:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6037:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6060:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "6029:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6029:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "6029:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 534,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "6105:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 537,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "6137:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 535,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "6120:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 112,
															"src": "6120:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6120:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6105:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "6105:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 541,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6154:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 543,
														"indexExpression": {
															"argumentTypes": null,
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6164:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6154:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "6198:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 544,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6175:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 546,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 545,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "6185:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6175:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 112,
															"src": "6175:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6175:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6154:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "6154:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6237:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6229:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6229:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6241:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 557,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6250:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6220:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "6215:42:3"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "5977:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "5994:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5976:33:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6019:0:3"
									},
									"scope": 677,
									"src": "5962:302:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "6640:285:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 569,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "6658:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6677:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6669:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6669:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6658:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6681:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "6650:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6650:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "6650:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 577,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6728:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 579,
														"indexExpression": {
															"argumentTypes": null,
															"id": 578,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "6738:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6728:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 584,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "6772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6780:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 580,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6749:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 581,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6759:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6749:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "6749:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6749:68:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6728:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "6728:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 589,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "6827:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 592,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "6859:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 590,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "6842:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 128,
															"src": "6842:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6842:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6827:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "6827:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 597,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "6890:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6907:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6899:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6899:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "6911:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6881:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "EmitStatement",
												"src": "6876:42:3"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6598:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6615:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6597:33:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6640:0:3"
									},
									"scope": 677,
									"src": "6583:342:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "7425:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 615,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "7443:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7460:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7452:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7452:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7443:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7464:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "7435:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7435:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "7435:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 624,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "7521:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7540:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7532:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7521:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7544:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															822,
															823
														],
														"referencedDeclaration": 823,
														"src": "7513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7513:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "7513:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 632,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "7592:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 635,
															"indexExpression": {
																"argumentTypes": null,
																"id": 633,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "7604:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7592:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 636,
														"indexExpression": {
															"argumentTypes": null,
															"id": 634,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7611:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7592:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "7622:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7592:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "7592:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 641,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7652:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7659:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7668:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "7643:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7643:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "EmitStatement",
												"src": "7638:37:3"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7368:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7400:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7367:48:3"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7425:0:3"
									},
									"scope": 677,
									"src": "7350:332:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "7921:168:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 655,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "7937:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "7946:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "7931:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7931:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "7931:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 660,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "7972:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "7981:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7981:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 670,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "8034:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8042:38:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	},
																	"value": "ERC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 663,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "7995:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 665,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 664,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "8007:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7995:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 668,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 666,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 73,
																			"src": "8016:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8016:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7995:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 155,
																"src": "7995:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7995:86:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "7963:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7963:119:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "7963:119:3"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See {_burn} and {_approve}.",
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "7879:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "7896:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7878:33:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7921:0:3"
									},
									"scope": 677,
									"src": "7860:229:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "1268:6823:3"
						}
					],
					"src": "0:8092:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							735
						]
					},
					"id": 736,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 680,
							"nodeType": "ImportDirective",
							"scope": 736,
							"sourceUnit": 805,
							"src": "25:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 681,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 804,
										"src": "135:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$804",
											"typeString": "contract IERC20"
										}
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:4"
								}
							],
							"contractDependencies": [
								804
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 735,
							"linearizedBaseContracts": [
								735,
								804
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 684,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "148:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 683,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 686,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "174:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 685,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 688,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "202:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 687,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "494:85:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 697,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "504:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 698,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "512:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "504:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "504:12:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 701,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 702,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "536:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "526:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "526:16:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 705,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "552:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 706,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "564:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "552:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "552:20:4"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 710,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "429:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "449:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "471:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 693,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:58:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:4"
									},
									"scope": 735,
									"src": "416:163:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "696:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 715,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 684,
													"src": "713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 714,
												"id": 716,
												"nodeType": "Return",
												"src": "706:12:4"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "681:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:15:4"
									},
									"scope": 735,
									"src": "644:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "892:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 722,
												"id": 724,
												"nodeType": "Return",
												"src": "902:14:4"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:4"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "877:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:15:4"
									},
									"scope": 735,
									"src": "838:85:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "1520:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "1537:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 730,
												"id": 732,
												"nodeType": "Return",
												"src": "1530:16:4"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:2:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1513:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 728,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1513:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:7:4"
									},
									"scope": 735,
									"src": "1472:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 736,
							"src": "109:1446:4"
						}
					],
					"src": "0:1556:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							804
						]
					},
					"id": 805,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 737,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:5"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:5"
									},
									"scope": 804,
									"src": "270:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "427:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "467:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:5"
									},
									"scope": 804,
									"src": "408:68:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "714:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "733:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:5"
									},
									"scope": 804,
									"src": "696:77:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1067:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1082:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1122:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:5"
									},
									"scope": 804,
									"src": "1048:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1801:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1818:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1852:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:5"
									},
									"scope": 804,
									"src": "1784:74:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2187:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2203:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2222:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2256:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:5"
									},
									"scope": 804,
									"src": "2165:97:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 795,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2446:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2468:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2488:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:5"
									},
									"src": "2431:72:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 803,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2677:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2700:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2725:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:5"
									},
									"src": "2662:78:5"
								}
							],
							"scope": 805,
							"src": "176:2566:5"
						}
					],
					"src": "0:2743:5"
				},
				"id": 5
			}
		}
	}
}